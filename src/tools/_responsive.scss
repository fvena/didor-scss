/**
 * RESPONSIVE MIXIN
 */

/**
 * Desk First Alias
 *
 * Listado de los alias con los puntos de corte para un desarrollo enfocado a
 * desk first. Puedes cambiarles el nombre, el valor o a침adir m치s puntos.
 */
$breakpoints-desk-first: (
  palm: 'screen and (max-width: #{$palm - 1})',
  lap: 'screen and (min-width: #{$palm}) and (max-width: #{$lap - 1})',
  small: 'screen and (min-width: #{$lap}) and (max-width: #{$small - 1})',
  desk: 'screen and (min-width: #{$small}) and (max-width: #{$desk - 1})',
  large: 'screen and (min-width: #{$desk})',
  portrait: 'screen and (max-width: #{$lap - 1})',
  landscape: 'screen and (min-width: #{$lap})',
  touch: 'screen and (max-width: #{$small - 1})',
  screen: 'screen and (min-width: #{$small})',
  tablet: 'screen and (min-width: #{$palm}) and (max-width: #{$small - 1})',
);

/**
 * Mobile First Alias
 *
 * Listado de los alias con los puntos de scorte para un desarrollo enfocado a
 * mobile first. Puedes cambiarles el nombre, el valor o a침adir m치s puntos.
 */
$breakpoints-mobile-first: (
  palm: 'screen and (max-width: #{$palm - 1})',
  lap: 'screen and (min-width: #{$palm})',
  small: 'screen and (min-width: #{$lap})',
  desk: 'screen and (min-width: #{$small})',
  large: 'screen and (min-width: #{$desk})',
  portrait: 'screen and (max-width: #{$lap - 1})',
  landscape: 'screen and (min-width: #{$lap})',
  touch: 'screen and (max-width: #{$small - 1})',
  screen: 'screen and (min-width: #{$small})',
  tablet: 'screen and (min-width: #{$palm}) and (max-width: #{$small - 1})',
);

/**
 * Mixin que genera media query en base a los alias definidos en los setting
 * `_settings.responsive.scss`. Ejemplo de uso.
 *
 * .foo {
 *   color: green;
 *
 *   @include media(palm) {
 *     color: red;
 *   }
 * }
 */

@mixin media($media-query) {
  $breakpoints-map: $breakpoints-desk-first;

  // Compruebo si es mobile first
  @if ($mobile-first) {
    $breakpoints-map: $breakpoints-mobile-first;
  }

  // Si el alias existe en la lista que indicamos en el setting
  @if map-has-key($breakpoints-map, $media-query) {
    // Crea la regla media-query
    @media #{map-get($breakpoints-map, $media-query)} {
      @content;
    }
  }

  // Si no existe ningun alias muestra una alerta
  @else {
    @warn 'Oops! Breakpoint "#{$media-query}" does not exist.';
  }
}
